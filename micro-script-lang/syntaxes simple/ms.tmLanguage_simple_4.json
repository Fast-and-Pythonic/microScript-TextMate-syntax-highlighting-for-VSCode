{
    "name": "MicroScript",
    "scopeName": "source.ms",
    "fileTypes": [
        "ms"
    ],
    "patterns": [
        
        { "include": "#comments" },
        
        { "include": "#keywords" },
        
        { "include": "#multi_char_operators" },
        { "include": "#compound_operators" },
        { "include": "#single_operators" },
        
        { "include": "#numbers" },
        { "include": "#booleans" },
        { "include": "#strings" },
        
        { "include": "#function_declaration" },
        { "include": "#function_call" },
        { "include": "#class_instantiation" }
        
        
        
    ],
    
    
    
    "repository": {
        
        "comments": {
            "patterns": [
                {
                    "match": "//.*$",
                    "name": "comment.line.double-slash.ms"
                },
                {
                    "begin": "/\\*",
                    "end": "\\*/",
                    "name": "comment.block.ms"
                }
            ]
        },
        
        
        
        "keywords": {
            "patterns": [
                {
                    "match": "(?<![a-zA-Z_])(?:local|global)(?![a-zA-Z0-9_])",
                    "name": "storage.modifier.declaration.ms"
                },
                {
                    "match": "(?<![a-zA-Z_])(?:end|return)(?![a-zA-Z0-9_])",
                    "name": "keyword.control.ms"
                },
                {
                    "match": "(?<![a-zA-Z_])(?:if|elsif|else|then)(?![a-zA-Z0-9_])",
                    "name": "keyword.control.conditional.ms"
                },
                {
                    "match": "(?<![a-zA-Z_])(?:and|or|not)(?![a-zA-Z0-9_])",
                    "name": "keyword.operator.logical.ms"
                },
                {
                    "match": "(?<![a-zA-Z_])(?:while|for|to|by|in|break|continue)(?![a-zA-Z0-9_])",
                    "name": "keyword.control.loop.ms"
                },
                
                
                
                {
                    "match": "(?<![a-zA-Z_])(?:object)(?![a-zA-Z0-9_])",
                    "name": "storage.type.object.ms"
                },
                {
                    "match": "(?<![a-zA-Z_])(?:class)(?![a-zA-Z0-9_])",
                    "name": "meta.class.ms",
                    "captures": {
                        "0": { "name": "storage.type.class.ms" }
                    }
                },
                {
                    "match": "(?<![a-zA-Z_])(?:constructor)(?![a-zA-Z0-9_])",
                    "name": "meta.class.ms meta.method.declaration.ms storage.type.ms",
                    "captures": {
                        "0": { "name": "storage.type.constructor.ms" }
                    }
                },
                {
                    "match": "(?<![a-zA-Z_])(?:extends)(?![a-zA-Z0-9_])",
                    "name": "meta.class.ms meta.definition.class.inherited.classes.ms storage.modifier.ms",
                    "captures": {
                        "0": { "name": "storage.modifier.extends.ms" }
                    }
                },
                {
                    "match": "(?<![a-zA-Z_])(?:super)(?![a-zA-Z0-9_])",
                    "name": "meta.class.ms",
                    "captures": {
                        "0": { "name": "variable.language.super.ms" }
                    }
                },
                {
                    "match": "(?<![a-zA-Z_])(?:this)(?![a-zA-Z0-9_])",
                    "name": "meta.class.ms",
                    "captures": {
                        "0": { "name": "variable.language.this.ms" }
                    }
                },
                {
                    "match": "(?<![a-zA-Z_])(?:new)(?![a-zA-Z0-9_])",
                    "name": "keyword.control.new.ms"
                },
                
                
                
                {
                    "match": "(?<![a-zA-Z_])(?:do|after|every|sleep)(?![a-zA-Z0-9_])",
                    "name": "keyword.control.schedule.ms"
                }
            ]
        },
        
        
        
        "multi_char_operators": {
            "patterns": [
                {
                    "match": "(?<!=)(==|!=|<=|>=)(?!=)",
                    "name": "keyword.operator.comparison.ms"
                },
                {
                    "match": "<<|>>",
                    "name": "keyword.operator.bitwise.ms"
                }
            ]
        },
        "compound_operators": {
            "patterns": [
                {
                    "match": "(?<!=)(\\+=|-=|\\*=|/=|%=)(?!=)",
                    "name": "keyword.operator.assignment.compound.ms"
                }
            ]
        },
        "single_operators": {
            "patterns": [
                {
                    "match": "(?<!=)=(?!=)",
                    "name": "keyword.operator.assignment.ms"
                },
                {
                    "match": "(?<!=)(\\+|-|\\*|/|%|\\^)(?!=)",
                    "name": "keyword.operator.arithmetic.ms"
                },
                {
                    "match": "<|>",
                    "name": "keyword.operator.comparison.ms"
                },
                {
                    "match": "&|\\|",
                    "name": "keyword.operator.bitwise.ms"
                }
            ]
        },
        
        
        
        "numbers": {
            "patterns": [
                {
                    "match": "(\\d+)(?<![a-zA-Z_]+\\d+)",
                    "name": "constant.numeric.ms"
                }
            ]
        },
        "booleans": {
            "patterns": [
                {
                    "match": "(?<![a-zA-Z_])(?:true|false)(?![a-zA-Z0-9_])",
                    "name": "constant.language.boolean.ms"
                }
            ]
        },
        
        
        
        "strings": {
            "patterns": [
                {
                    "begin": "\"",
                    "beginCaptures": { "0": { "name": "punctuation.definition.string.begin.ms" } },
                    "end": "\"",
                    "endCaptures": { "0": { "name": "punctuation.definition.string.end.ms" } },
                    "name": "string.quoted.double.ms",
                    "patterns": [
                        {
                            "match": "\\\\.",
                            "name": "constant.character.escape.ms"
                        }
                    ]
                },
                {
                    "begin": "'",
                    "beginCaptures": { "0": { "name": "punctuation.definition.string.begin.ms" } },
                    "end": "'",
                    "endCaptures": { "0": { "name": "punctuation.definition.string.end.ms" } },
                    "name": "string.quoted.single.ms",
                    "patterns": [
                        {
                            "match": "\\\\.",
                            "name": "constant.character.escape.ms"
                        }
                    ]
                }
            ]
        },
        
        
        
        
        
        
        
        
        
        
        "create-function_parameters_declaration": {
            "patterns": [
                {
                    "match": "(?<=function\\s*\\(\\s*)([a-zA-Z_][a-zA-Z0-9_]*)(?=\\s*\\)|\\s*$)",
                    "name": "variable.parameter.function-declaration.func-bracket-single-param"
                },
                {
                    "match": "(?<=function\\s*\\(\\s*)([a-zA-Z_][a-zA-Z0-9_]*)(?=\\s*,.*$)",
                    "name": "variable.parameter.function-declaration.func-bracket-param,"
                },
                {
                    "match": "(?<![^,\\s]\\s*)([a-zA-Z_][a-zA-Z0-9_]*)(?=\\s*,.*$)",
                    "name": "variable.parameter.function-declaration.param,"
                },
                {
                    "match": "(?<![^,\\s]\\s*)([a-zA-Z_][a-zA-Z0-9_]*)(?=\\s*$|\\s*\\))",
                    "name": "variable.parameter.function-declaration.last-param"
                }
            ]
        },
        
        
        
        "create-function_parameters_assignment": {
            "patterns": [
                {
                    "match": "(?<=function\\s*\\(\\s*)([a-zA-Z_][a-zA-Z0-9_]*)(?=\\s*(\\+=|-=|\\*=|\\/=|%=|=))(?!==)",
                    "name": "variable.parameter.function-declaration.func-bracket-param="
                },
                {
                    "match": "(?<![^,\\s]\\s*)([a-zA-Z_][a-zA-Z0-9_]*)(?=\\s*(\\+=|-=|\\*=|\\/=|%=|=))(?!==)",
                    "name": "variable.parameter.function-declaration.param="
                }
            ]
        },
        
        
        
        
        
        
        
        
        
        
        "call-function_parameters_assignment": {
            "patterns": [
                {
                    "match": "([a-zA-Z_][a-zA-Z0-9_]*)(?=\\s*(\\+=|-=|\\*=|\\/=|%=|=))(?!==)",
                    "name": "variable.parameter.function-call.func-bracket-param="
                },
                {
                    "match": "(?<![^,\\s]\\s*)([a-zA-Z_][a-zA-Z0-9_]*)(?=\\s*(\\+=|-=|\\*=|\\/=|%=|=))(?!==)",
                    "name": "variable.parameter.function-call.param="
                }
            ]
        },
        
        
        
        
        
        
        
        
        
        
        "function_declaration": {
            
            "begin": "(\\bfunction\\b)(\\s*\\()",
            "beginCaptures": {
                "0": { "name": "keyword.declaration.function" }
            },
            
            "patterns": [
                { "include": "#highlight_in_function_declaration_brackets" },
                
                { "include": "#function_declaration" },
                { "include": "#function_call" }
            ],
            
            "end": "\\)",
            "endCaptures": {
                "0": { "name": "keyword.declaration.function.end punctuation.definition.parameters.end" }
            }
        },
        
        
        "highlight_in_function_declaration_brackets": {
            "patterns": [
                {
                    "begin": "\\(",
                    "patterns": [
                        { "include": "#highlight_in_function_declaration_brackets" }
                    ],
                    "end": "\\)"
                },
                
                { "include": "#comments" },
                
                { "include": "#create-function_parameters_declaration" },
                { "include": "#create-function_parameters_assignment" },
                
                { "include": "#keywords" },
                
                { "include": "#multi_char_operators" },
                { "include": "#compound_operators" },
                { "include": "#single_operators" },
                
                { "include": "#numbers" },
                { "include": "#booleans" },
                
                { "include": "#strings" }
                
            ]
        },
        
        
        
        
        
        
        
        
        
        
        "function_call": {
            
            "begin": "(?<!new\\s+)(\\b[a-zA-Z_][a-zA-Z0-9_]*\\b)(\\s*\\()",
            "beginCaptures": {
                "1": { "name": "meta.function-call.ms entity.name.function.ms"}
            },
            
            "patterns": [
                { "include": "#highlight_in_function_call_brackets" },
                
                { "include": "#function_call" }
            ],
            
            "end": "\\)",
            "endCaptures": {
                "0": { "name": "entity.name.function.end.ms" }
            }
        },
        
        
        "highlight_in_function_call_brackets": {
            "patterns": [
                {
                    "begin": "\\(",
                    "patterns": [
                        { "include": "#highlight_in_function_call_brackets" }
                    ],
                    "end": "\\)"
                },
                
                { "include": "#comments" },
                
                { "include": "#call-function_parameters_assignment" },
                
                { "include": "#keywords" },
                
                { "include": "#multi_char_operators" },
                { "include": "#compound_operators" },
                { "include": "#single_operators" },
                
                { "include": "#numbers" },
                { "include": "#booleans" },
                
                { "include": "#strings" }
                
            ]
        },
        
        
        
        
        
        
        
        
        
        
        "class_instantiation": {
            
            "begin": "(?<=new\\s+)(\\b[a-zA-Z_][a-zA-Z0-9_]*\\b)(\\s*\\()",
            "beginCaptures": {
                "1": { "name": "meta.class.ms entity.name.type.class.ms" }
            },
            
            "patterns": [
                { "include": "#highlight_in_class_instantiation_brackets" },
                
                { "include": "#class_instantiation" },
                
                { "include": "#function_call" }
            ],
            
            "end": "\\)",
            "endCaptures": {
                "0": { "name": "entity.name.class.end.ms keyword.declaration.function.end punctuation.definition.parameters.end" }
            }
        },
        
        "highlight_in_class_instantiation_brackets": {
            "patterns": [
                {
                    "begin": "\\(",
                    "patterns": [
                        { "include": "#highlight_in_function_call_brackets" }
                    ],
                    "end": "\\)"
                },
                
                { "include": "#comments" },
                
                { "include": "#call-function_parameters_assignment" },
                
                { "include": "#keywords" },
                
                { "include": "#multi_char_operators" },
                { "include": "#compound_operators" },
                { "include": "#single_operators" },
                
                { "include": "#numbers" },
                { "include": "#booleans" },
                
                { "include": "#strings" }
                
            ]
        }
        
        
        
        
        
    }
}











